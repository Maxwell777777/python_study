###1.实现一个功能与reversed()相同的生成器
def myRev(data):
    for index in range(len(data)-1,-1,-1):
        yield data[index]
for i in myRev('mjt666'):
    print(i,end='')
----------------------------------------------------


----------------------------------------------------
###2.10以内的素数之和是17，请编写程序，计算2000000以内的素数之和
import math

def is_prime(number):
    if number>1:
        if number==2:
            return True
        if number%2==0:
            return False
        for current in range(3,int(math.sqrt(number)+1),2):
            if number%current==0:
                return False
        return True
    return False

def get_primes(number):
    while True:
        if is_prime(number):
            yield number
        number+=1
        
def solve():
    total=2
    for next_prime in get_primes(3):
        if next_prime<2000000:
            total+=next_prime
        else:
            print(total)
            return
if __name__=='__main__':
    solve()
